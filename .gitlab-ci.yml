stages:
    - install
    - compile_default
    - run_quick
    - run_default
    - compile_picsar
    - run_picsar
    - compile_debug
    - compile_no_mpi_threadmultiple
    - compile_no_openmp

install:
  stage: install
  only:
    - develop
 
  script:
    # Force workdir cleaning in case of retried
    - echo "CI_PIPELINE_ID = " $CI_PIPELINE_ID
    - env
    - if [ -d /sps3/gitlab-runner/$CI_PIPELINE_ID ] ; then rm -rf /sps/gitlab-runner/$CI_PIPELINE_ID ; fi
    # Move in test dir
    - mkdir -p /sps3/gitlab-runner/$CI_PIPELINE_ID
    - cp -r $CI_PROJECT_DIR /sps3/gitlab-runner/$CI_PIPELINE_ID
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei
    # Set the environment
    - make uninstall_happi
    - make happi

compile_default:
  stage: compile_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -c  -v -l "/sps3/gitlab-runner/logs" -t "00:30:00"

runQuick:
  stage: run_quick
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst_quick_1d.py" -m 1 -o 1 -v

run1D:
  stage: run_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst1d_*_*.py" -m 2 -o 12 -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_1d*.py" -m 2 -o 12 -v -r 1 -l "/sps3/gitlab-runner/logs"

run2D:
  stage: run_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst2d_??_*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst2d_s_??_*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst2d_v_??_*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_2d*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"

run3D:
  stage: run_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst3d_??_*.py" -m 8 -o 12   --resource-file resources.json -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst3d_s_??_*.py" -m 8 -o 12 --resource-file resources.json -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst3d_v_??_*.py" -m 8 -o 12 --resource-file resources.json -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst3d_a_??_*.py" -m 8 -o 12 --resource-file resources.json -v -r 1 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_3d*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"

runAM:
  stage: run_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tstAM_??_*.py" -m 8 -o 12 -v -t 00:30:00 -l "/sps3/gitlab-runner/logs"
    - python validation.py -b "tstAM_v_??_*.py" -m 8 -o 12 -v -t 00:30:00 -l "/sps3/gitlab-runner/logs"

runCollisions:
  stage: run_default
  only:
    - develop
 
  script:
    # Move in test dir
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run checking script
    - python validation.py -b "tst_collisions*.py" -m 4 -o 4 -n 1 -v -r 1 -l "/sps3/gitlab-runner/logs"

compile_picsar:
  stage: compile_picsar
  only:
    - develop

  script:
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - python validation/validation.py -k picsar -c -v

run_picsar:
  stage: run_picsar
  only:
    - develop

  script:
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    - python validation.py -k picsar -b "tstAM_picsar_04_laser_wake.py" -m 4 -o 4 -n 1 -v

compile_debug:
  stage: compile_debug
  only:
    - develop

  script:
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - python validation/validation.py -k debug -c -v

compile_no_mpi_threadmultiple:
  stage: compile_no_mpi_threadmultiple
  only:
    - develop

  script:
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - python validation/validation.py -k no_mpi_tm -c -v

compile_no_openmp:
  stage: compile_no_openmp
  only:
    - develop

  script:
    - cd /sps3/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - python validation/validation.py -k noopenmp -c -v
