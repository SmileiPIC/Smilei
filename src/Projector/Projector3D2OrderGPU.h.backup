#ifndef PROJECTOR3D2ORDERGPU_H
#define PROJECTOR3D2ORDERGPU_H

#include "Projector3D.h"


class Projector3D2OrderGPU : public Projector3D
{
public:
    Projector3D2OrderGPU( Params &, Patch *patch );
    ~Projector3D2OrderGPU();

    //! Project global current densities (EMfields->Jx_/Jy_/Jz_)
    inline void currentsAndDensityGPU(
        double *const __restrict__ Jx, 
        double *const __restrict__ Jy, 
        double *const __restrict__ Jz, 
        double *const __restrict__ rho, 
        unsigned int Jx_size,
        unsigned int Jy_size,
        unsigned int Jz_size,
        unsigned int rho_size,
        Particles &particles,
        int istart,
        int iend, 
        double *invgf, 
        int *iold, 
        double *deltaold, 
        bool diag_flag = false );

    //! Project global current densities (EMfields->Jx_/Jy_/Jz_/rho), diagFields timestep
    inline void currentsAndDensity(
        double *Jx, 
        double *Jy,
        double *Jz, 
        double *rho,
        Particles &particles,
        unsigned int ipart,
        double invgf,
        int *iold,
        double *deltaold );

    //! Project global current charge (EMfields->rho_ , J), for initialization and diags
    void basic( double *rhoj, Particles &particles, unsigned int ipart, unsigned int type, int bin_shift = 0 ) override final;
    
    //! Project global current densities if Ionization in Species::dynamics,
    void ionizationCurrents( Field *Jx, Field *Jy, Field *Jz, Particles &particles, int ipart, LocalFields Jion ) override final;

    //! Wrapper
    void currentsAndDensityWrapper( ElectroMagn *EMfields, Particles &particles, SmileiMPI *smpi, int istart, int iend, int ithread, bool diag_flag, bool is_spectral, int ispec, int icell = 0, int ipart_ref = 0 ) override final;
    
    void susceptibility( ElectroMagn *EMfields, Particles &particles, double species_mass, SmileiMPI *smpi, int istart, int iend,  int ithread, int icell = 0, int ipart_ref = 0 ) override final;
    
private:
    int    pxr;
    double dt, dts2, dts4;
};

#endif
